{"version":3,"sources":["../src/constants/index.ts","../src/constants/misc.ts","../src/utils/ekubo.ts","../src/constants/amms.ts","../src/constants/contracts.ts","../src/abis/EkuboPositions.json","../src/abis/JediswapPair.json","../src/abis/Multicall.json","../src/constants/safety.ts","../src/constants/tokens.ts","../src/factory/default.ts","../src/utils/contract.ts","../src/utils/helpers.ts","../src/utils/price.ts","../src/factory/interface.ts","../src/utils/marketCap.ts","../src/utils/safety.ts"],"sourcesContent":["export * from './amms'\nexport * from './contracts'\nexport * from './misc'\nexport * from './safety'\nexport * from './tokens'\n","import { Percent } from '@uniswap/sdk-core'\n\nimport { getStartingTick } from '../utils/ekubo'\n\nexport const MAX_TEAM_ALLOCATION_HOLDERS_COUNT = 10\nexport const MAX_TEAM_ALLOCATION_TOTAL_SUPPLY_PERCENTAGE = new Percent(10, 100) // 10%\nexport const DECIMALS = 18\n\nexport enum Entrypoint {\n  CREATE_MEMECOIN = 'create_memecoin',\n  IS_MEMECOIN = 'is_memecoin',\n  AGGREGATE = 'aggregate',\n  NAME = 'name',\n  SYMBOL = 'symbol',\n  IS_LAUNCHED = 'is_launched',\n  GET_TEAM_ALLOCATION = 'get_team_allocation',\n  TOTAL_SUPPLY = 'total_supply',\n  OWNER = 'owner',\n  LOCKED_LIQUIDITY = 'locked_liquidity',\n  LAUNCH_ON_JEDISWAP = 'launch_on_jediswap',\n  LAUNCH_ON_EKUBO = 'launch_on_ekubo',\n  LAUNCH_ON_STARKDEFI = 'launch_on_starkdefi',\n  APPROVE = 'approve',\n  GET_REMAINING_TIME = 'get_remaining_time',\n  LAUNCHED_WITH_LIQUIDITY_PARAMETERS = 'launched_with_liquidity_parameters',\n  GET_LOCK_DETAILS = 'get_lock_details',\n  LAUNCHED_AT_BLOCK_NUMBER = 'launched_at_block_number',\n  GET_RESERVES = 'get_reserves',\n  LIQUIDITY_POSITION_DETAILS = 'liquidity_position_details',\n  WITHDRAW_FEES = 'withdraw_fees',\n  EXTEND_LOCK = 'extend_lock',\n  BALANCE_OF_CAMEL = 'balanceOf',\n  BALANCE_OF = 'balance_of',\n  TRANSFER = 'transfer',\n  GET_TOKEN_INFOS = 'get_token_info',\n}\n\nexport enum LiquidityType {\n  JEDISWAP_ERC20 = 'JEDISWAP_ERC20',\n  STARKDEFI_ERC20 = 'STARKDEFI_ERC20',\n  EKUBO_NFT = 'EKUBO_NFT',\n}\n\nexport const MIN_STARTING_MCAP = 5_000 // $5k\nexport const RECOMMENDED_STARTING_MCAP = 10_000 // $12k\n\nexport const MIN_HODL_LIMIT = new Percent(1, 200) // 0.5%\nexport const MAX_HODL_LIMIT = new Percent(1, 1) // 100%\nexport const RECOMMENDED_HODL_LIMIT = new Percent(1, 100) // 1%\n\nexport const TRANSFER_RESTRICTION_DELAY_STEP = 15 // 15m\nexport const MIN_TRANSFER_RESTRICTION_DELAY = 30 // 30m\nexport const MAX_TRANSFER_RESTRICTION_DELAY = 1440 // 24h\n\nexport const LIQUIDITY_LOCK_PERIOD_STEP = 1 // 1 month\nexport const MIN_LIQUIDITY_LOCK_PERIOD = 6 // 6 months\nexport const MAX_LIQUIDITY_LOCK_PERIOD = 25 // 2 years and 1 month\n\nexport const LIQUIDITY_LOCK_INCREASE_STEP = 1 // 1 month\nexport const MIN_LIQUIDITY_LOCK_INCREASE = 1 // 1 months\nexport const MAX_LIQUIDITY_LOCK_INCREASE = 25 // 2 years and 1 month\n\nexport const LIQUIDITY_LOCK_FOREVER_TIMESTAMP = 9999999999 // 20/11/2286\n\nexport const MIN_EKUBO_FEES = new Percent(0, 1) // 0%\nexport const MAX_EKUBO_FEES = new Percent(2, 100) // 2%\nexport const RECOMMENDED_EKUBO_FEES = new Percent(3, 1000) // 0.3%\n\n// Ekubo\n\nexport const EKUBO_TICK_SIZE = 1.000001\nconst EKUBO_MAX_PRICE = '0x100000000000000000000000000000000' // 2 ** 128\n\nexport const EKUBO_TICK_SPACING = 5982 // log(1 + 0.6%) / log(1.000001) => 0.6% is the tick spacing percentage\nexport const EKUBO_TICK_SIZE_LOG = Math.log(EKUBO_TICK_SIZE)\nexport const EKUBO_FEES_MULTIPLICATOR = EKUBO_MAX_PRICE\nexport const EKUBO_BOUND = getStartingTick(+EKUBO_MAX_PRICE)\n","import { EKUBO_TICK_SIZE, EKUBO_TICK_SIZE_LOG, EKUBO_TICK_SPACING } from '../constants/misc'\n\nexport const getInitialPrice = (startingTick: number) => EKUBO_TICK_SIZE ** startingTick\n\nexport const getStartingTick = (initialPrice: number) =>\n  Math.floor(Math.log(initialPrice) / EKUBO_TICK_SIZE_LOG / EKUBO_TICK_SPACING) * EKUBO_TICK_SPACING\n","import { Entrypoint } from './misc'\n\nexport enum AMM {\n  EKUBO = 'Ekubo',\n  JEDISWAP = 'Jediswap',\n  STARKDEFI = 'StarkDeFi',\n}\n\nexport const AMMS = {\n  [AMM.EKUBO]: {\n    description:\n      'Most efficient AMM ever, you can launch your token without having to provide liquidity and can collect fees.',\n    launchEntrypoint: Entrypoint.LAUNCH_ON_EKUBO,\n  },\n  [AMM.JEDISWAP]: {\n    description:\n      \"Widely supported AMM, team allocation will be free but you have to provide liquidity and can't collect fees.\",\n    launchEntrypoint: Entrypoint.LAUNCH_ON_JEDISWAP,\n  },\n  [AMM.STARKDEFI]: {\n    description: \"Team allocation will be free but you have to provide liquidity and can't collect fees.\",\n    launchEntrypoint: Entrypoint.LAUNCH_ON_STARKDEFI,\n  },\n}\n","import { constants, json } from 'starknet'\n\nimport EkuboPositions from '../abis/EkuboPositions.json'\nimport JediswapPair from '../abis/JediswapPair.json'\nimport Multicall from '../abis/Multicall.json'\n\nexport const TOKEN_CLASS_HASH = {\n  [constants.StarknetChainId.SN_GOERLI]: '0x05ba9aea47a8dd7073ab82b9e91721bdb3a2c1b259cffd68669da1454faa80ac',\n  [constants.StarknetChainId.SN_MAIN]: '0x063ee878d3559583ceae80372c6088140e1180d9893aa65fbefc81f45ddaaa17',\n}\n\nexport const FACTORY_ADDRESSES = {\n  [constants.StarknetChainId.SN_GOERLI]: '0x076c3112e95994507c44c72b8dfb7f8d568a370d2f7c2d918ed9f55327671385',\n  [constants.StarknetChainId.SN_MAIN]: '0x01a46467a9246f45c8c340f1f155266a26a71c07bd55d36e8d1c7d0d438a2dbc',\n}\n\nexport const EKUBO_POSITIONS_ADDRESSES = {\n  [constants.StarknetChainId.SN_GOERLI]: '0x073fa8432bf59f8ed535f29acfd89a7020758bda7be509e00dfed8a9fde12ddc',\n  [constants.StarknetChainId.SN_MAIN]: '0x02e0af29598b407c8716b17f6d2795eca1b471413fa03fb145a5e33722184067',\n}\n\nexport const ETH_ADDRESSES = {\n  [constants.StarknetChainId.SN_GOERLI]: '0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7',\n  [constants.StarknetChainId.SN_MAIN]: '0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7',\n}\nexport const STRK_ADDRESSES = {\n  [constants.StarknetChainId.SN_GOERLI]: '0x4718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d',\n  [constants.StarknetChainId.SN_MAIN]: '0x4718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d',\n}\n\nexport const USDC_ADDRESSES = {\n  [constants.StarknetChainId.SN_GOERLI]: '0x5a643907b9a4bc6a55e9069c4fd5fd1f5c79a22470690f75556c4736e34426',\n  [constants.StarknetChainId.SN_MAIN]: '0x53c91253bc9682c04929ca02ed00b3e423f6710d2ee7e0d5ebb06f3ecf368a8',\n}\n\nexport const MULTICALL_ADDRESSES = {\n  [constants.StarknetChainId.SN_GOERLI]: '0x01a33330996310a1e3fa1df5b16c1e07f0491fdd20c441126e02613b948f0225',\n  [constants.StarknetChainId.SN_MAIN]: '0x01a33330996310a1e3fa1df5b16c1e07f0491fdd20c441126e02613b948f0225',\n}\n\nexport const JEDISWAP_ETH_USDC = {\n  [constants.StarknetChainId.SN_GOERLI]: '0x05a2b2b37f66157f767ea711cb4e034c40d41f2f5acf9ff4a19049fa11c1a884',\n  [constants.StarknetChainId.SN_MAIN]: '0x04d0390b777b424e43839cd1e744799f3de6c176c7e32c1812a41dbd9c19db6a',\n}\n\nexport const JEDISWAP_STRK_USDC = {\n  [constants.StarknetChainId.SN_GOERLI]: '0x018b129b1a372b3288077521ad8749f5a2b2ddfb67ef5a37e2d02190fa11c40f',\n  [constants.StarknetChainId.SN_MAIN]: '0x5726725e9507c3586cc0516449e2c74d9b201ab2747752bb0251aaa263c9a26',\n}\n\nexport const compiledMulticall = json.parse(JSON.stringify(Multicall))\nexport const compiledJediswapPair = json.parse(JSON.stringify(JediswapPair))\nexport const compiledEkuboPositions = json.parse(JSON.stringify(EkuboPositions))\n","[\r\n  {\r\n    \"name\": \"PositionsHasInterface\",\r\n    \"type\": \"impl\",\r\n    \"interface_name\": \"ekubo::components::upgradeable::IHasInterface\"\r\n  },\r\n  {\r\n    \"name\": \"ekubo::components::upgradeable::IHasInterface\",\r\n    \"type\": \"interface\",\r\n    \"items\": [\r\n      {\r\n        \"name\": \"get_primary_interface_id\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::felt252\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ILockerImpl\",\r\n    \"type\": \"impl\",\r\n    \"interface_name\": \"ekubo::interfaces::core::ILocker\"\r\n  },\r\n  {\r\n    \"name\": \"core::array::Span::<core::felt252>\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"snapshot\",\r\n        \"type\": \"@core::array::Array::<core::felt252>\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::interfaces::core::ILocker\",\r\n    \"type\": \"interface\",\r\n    \"items\": [\r\n      {\r\n        \"name\": \"locked\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u32\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"type\": \"core::array::Span::<core::felt252>\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::array::Span::<core::felt252>\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"PositionsImpl\",\r\n    \"type\": \"impl\",\r\n    \"interface_name\": \"ekubo::interfaces::positions::IPositions\"\r\n  },\r\n  {\r\n    \"name\": \"ekubo::types::keys::PoolKey\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"token0\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      },\r\n      {\r\n        \"name\": \"token1\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      },\r\n      {\r\n        \"name\": \"fee\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"tick_spacing\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"extension\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"core::bool\",\r\n    \"type\": \"enum\",\r\n    \"variants\": [\r\n      {\r\n        \"name\": \"False\",\r\n        \"type\": \"()\"\r\n      },\r\n      {\r\n        \"name\": \"True\",\r\n        \"type\": \"()\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::types::i129::i129\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"mag\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"sign\",\r\n        \"type\": \"core::bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::types::bounds::Bounds\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"lower\",\r\n        \"type\": \"ekubo::types::i129::i129\"\r\n      },\r\n      {\r\n        \"name\": \"upper\",\r\n        \"type\": \"ekubo::types::i129::i129\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::interfaces::positions::GetTokenInfoRequest\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"id\",\r\n        \"type\": \"core::integer::u64\"\r\n      },\r\n      {\r\n        \"name\": \"pool_key\",\r\n        \"type\": \"ekubo::types::keys::PoolKey\"\r\n      },\r\n      {\r\n        \"name\": \"bounds\",\r\n        \"type\": \"ekubo::types::bounds::Bounds\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"core::array::Span::<ekubo::interfaces::positions::GetTokenInfoRequest>\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"snapshot\",\r\n        \"type\": \"@core::array::Array::<ekubo::interfaces::positions::GetTokenInfoRequest>\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"core::integer::u256\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"low\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"high\",\r\n        \"type\": \"core::integer::u128\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::types::pool_price::PoolPrice\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"sqrt_ratio\",\r\n        \"type\": \"core::integer::u256\"\r\n      },\r\n      {\r\n        \"name\": \"tick\",\r\n        \"type\": \"ekubo::types::i129::i129\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::interfaces::positions::GetTokenInfoResult\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"pool_price\",\r\n        \"type\": \"ekubo::types::pool_price::PoolPrice\"\r\n      },\r\n      {\r\n        \"name\": \"liquidity\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"amount0\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"amount1\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"fees0\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"fees1\",\r\n        \"type\": \"core::integer::u128\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"core::array::Span::<ekubo::interfaces::positions::GetTokenInfoResult>\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"snapshot\",\r\n        \"type\": \"@core::array::Array::<ekubo::interfaces::positions::GetTokenInfoResult>\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::extensions::interfaces::twamm::OrderKey\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"sell_token\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      },\r\n      {\r\n        \"name\": \"buy_token\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      },\r\n      {\r\n        \"name\": \"fee\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"start_time\",\r\n        \"type\": \"core::integer::u64\"\r\n      },\r\n      {\r\n        \"name\": \"end_time\",\r\n        \"type\": \"core::integer::u64\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"core::array::Span::<(core::integer::u64, ekubo::extensions::interfaces::twamm::OrderKey)>\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"snapshot\",\r\n        \"type\": \"@core::array::Array::<(core::integer::u64, ekubo::extensions::interfaces::twamm::OrderKey)>\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::extensions::interfaces::twamm::OrderInfo\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"sale_rate\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"remaining_sell_amount\",\r\n        \"type\": \"core::integer::u128\"\r\n      },\r\n      {\r\n        \"name\": \"purchased_amount\",\r\n        \"type\": \"core::integer::u128\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"core::array::Span::<ekubo::extensions::interfaces::twamm::OrderInfo>\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"snapshot\",\r\n        \"type\": \"@core::array::Array::<ekubo::extensions::interfaces::twamm::OrderInfo>\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::interfaces::positions::IPositions\",\r\n    \"type\": \"interface\",\r\n    \"items\": [\r\n      {\r\n        \"name\": \"get_nft_address\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"upgrade_nft\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"class_hash\",\r\n            \"type\": \"core::starknet::class_hash::ClassHash\"\r\n          }\r\n        ],\r\n        \"outputs\": [],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"set_twamm\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"twamm_address\",\r\n            \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n          }\r\n        ],\r\n        \"outputs\": [],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"get_twamm_address\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"get_tokens_info\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"params\",\r\n            \"type\": \"core::array::Span::<ekubo::interfaces::positions::GetTokenInfoRequest>\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::array::Span::<ekubo::interfaces::positions::GetTokenInfoResult>\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"get_token_info\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"ekubo::interfaces::positions::GetTokenInfoResult\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"get_orders_info\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"params\",\r\n            \"type\": \"core::array::Span::<(core::integer::u64, ekubo::extensions::interfaces::twamm::OrderKey)>\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::array::Span::<ekubo::extensions::interfaces::twamm::OrderInfo>\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"get_order_info\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"order_key\",\r\n            \"type\": \"ekubo::extensions::interfaces::twamm::OrderKey\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"ekubo::extensions::interfaces::twamm::OrderInfo\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"mint\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u64\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"mint_with_referrer\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          },\r\n          {\r\n            \"name\": \"referrer\",\r\n            \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u64\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"mint_v2\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"referrer\",\r\n            \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u64\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"check_liquidity_is_zero\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          }\r\n        ],\r\n        \"outputs\": [],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"unsafe_burn\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          }\r\n        ],\r\n        \"outputs\": [],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"deposit_last\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          },\r\n          {\r\n            \"name\": \"min_liquidity\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"deposit_amounts_last\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          },\r\n          {\r\n            \"name\": \"amount0\",\r\n            \"type\": \"core::integer::u128\"\r\n          },\r\n          {\r\n            \"name\": \"amount1\",\r\n            \"type\": \"core::integer::u128\"\r\n          },\r\n          {\r\n            \"name\": \"min_liquidity\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"deposit\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          },\r\n          {\r\n            \"name\": \"min_liquidity\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"deposit_amounts\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          },\r\n          {\r\n            \"name\": \"amount0\",\r\n            \"type\": \"core::integer::u128\"\r\n          },\r\n          {\r\n            \"name\": \"amount1\",\r\n            \"type\": \"core::integer::u128\"\r\n          },\r\n          {\r\n            \"name\": \"min_liquidity\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"mint_and_deposit\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          },\r\n          {\r\n            \"name\": \"min_liquidity\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"(core::integer::u64, core::integer::u128)\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"mint_and_deposit_with_referrer\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          },\r\n          {\r\n            \"name\": \"min_liquidity\",\r\n            \"type\": \"core::integer::u128\"\r\n          },\r\n          {\r\n            \"name\": \"referrer\",\r\n            \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"(core::integer::u64, core::integer::u128)\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"mint_and_deposit_and_clear_both\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          },\r\n          {\r\n            \"name\": \"min_liquidity\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"(core::integer::u64, core::integer::u128, core::integer::u256, core::integer::u256)\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"collect_fees\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"(core::integer::u128, core::integer::u128)\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"withdraw\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          },\r\n          {\r\n            \"name\": \"liquidity\",\r\n            \"type\": \"core::integer::u128\"\r\n          },\r\n          {\r\n            \"name\": \"min_token0\",\r\n            \"type\": \"core::integer::u128\"\r\n          },\r\n          {\r\n            \"name\": \"min_token1\",\r\n            \"type\": \"core::integer::u128\"\r\n          },\r\n          {\r\n            \"name\": \"collect_fees\",\r\n            \"type\": \"core::bool\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"(core::integer::u128, core::integer::u128)\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"withdraw_v2\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          },\r\n          {\r\n            \"name\": \"bounds\",\r\n            \"type\": \"ekubo::types::bounds::Bounds\"\r\n          },\r\n          {\r\n            \"name\": \"liquidity\",\r\n            \"type\": \"core::integer::u128\"\r\n          },\r\n          {\r\n            \"name\": \"min_token0\",\r\n            \"type\": \"core::integer::u128\"\r\n          },\r\n          {\r\n            \"name\": \"min_token1\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"(core::integer::u128, core::integer::u128)\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"get_pool_price\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"pool_key\",\r\n            \"type\": \"ekubo::types::keys::PoolKey\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"ekubo::types::pool_price::PoolPrice\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"mint_and_increase_sell_amount\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"order_key\",\r\n            \"type\": \"ekubo::extensions::interfaces::twamm::OrderKey\"\r\n          },\r\n          {\r\n            \"name\": \"amount\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"(core::integer::u64, core::integer::u128)\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"increase_sell_amount_last\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"order_key\",\r\n            \"type\": \"ekubo::extensions::interfaces::twamm::OrderKey\"\r\n          },\r\n          {\r\n            \"name\": \"amount\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"increase_sell_amount\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"order_key\",\r\n            \"type\": \"ekubo::extensions::interfaces::twamm::OrderKey\"\r\n          },\r\n          {\r\n            \"name\": \"amount\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"decrease_sale_rate\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"order_key\",\r\n            \"type\": \"ekubo::extensions::interfaces::twamm::OrderKey\"\r\n          },\r\n          {\r\n            \"name\": \"sale_rate_delta\",\r\n            \"type\": \"core::integer::u128\"\r\n          }\r\n        ],\r\n        \"outputs\": [],\r\n        \"state_mutability\": \"external\"\r\n      },\r\n      {\r\n        \"name\": \"withdraw_proceeds_from_sale\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"core::integer::u64\"\r\n          },\r\n          {\r\n            \"name\": \"order_key\",\r\n            \"type\": \"ekubo::extensions::interfaces::twamm::OrderKey\"\r\n          }\r\n        ],\r\n        \"outputs\": [],\r\n        \"state_mutability\": \"external\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Owned\",\r\n    \"type\": \"impl\",\r\n    \"interface_name\": \"ekubo::components::owned::IOwned\"\r\n  },\r\n  {\r\n    \"name\": \"ekubo::components::owned::IOwned\",\r\n    \"type\": \"interface\",\r\n    \"items\": [\r\n      {\r\n        \"name\": \"get_owner\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"transfer_ownership\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"new_owner\",\r\n            \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n          }\r\n        ],\r\n        \"outputs\": [],\r\n        \"state_mutability\": \"external\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Upgradeable\",\r\n    \"type\": \"impl\",\r\n    \"interface_name\": \"ekubo::interfaces::upgradeable::IUpgradeable\"\r\n  },\r\n  {\r\n    \"name\": \"ekubo::interfaces::upgradeable::IUpgradeable\",\r\n    \"type\": \"interface\",\r\n    \"items\": [\r\n      {\r\n        \"name\": \"replace_class_hash\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"class_hash\",\r\n            \"type\": \"core::starknet::class_hash::ClassHash\"\r\n          }\r\n        ],\r\n        \"outputs\": [],\r\n        \"state_mutability\": \"external\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Clear\",\r\n    \"type\": \"impl\",\r\n    \"interface_name\": \"ekubo::components::clear::IClear\"\r\n  },\r\n  {\r\n    \"name\": \"ekubo::interfaces::erc20::IERC20Dispatcher\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"contract_address\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::components::clear::IClear\",\r\n    \"type\": \"interface\",\r\n    \"items\": [\r\n      {\r\n        \"name\": \"clear\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"token\",\r\n            \"type\": \"ekubo::interfaces::erc20::IERC20Dispatcher\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u256\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"clear_minimum\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"token\",\r\n            \"type\": \"ekubo::interfaces::erc20::IERC20Dispatcher\"\r\n          },\r\n          {\r\n            \"name\": \"minimum\",\r\n            \"type\": \"core::integer::u256\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u256\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      },\r\n      {\r\n        \"name\": \"clear_minimum_to_recipient\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"token\",\r\n            \"type\": \"ekubo::interfaces::erc20::IERC20Dispatcher\"\r\n          },\r\n          {\r\n            \"name\": \"minimum\",\r\n            \"type\": \"core::integer::u256\"\r\n          },\r\n          {\r\n            \"name\": \"recipient\",\r\n            \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"core::integer::u256\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Expires\",\r\n    \"type\": \"impl\",\r\n    \"interface_name\": \"ekubo::components::expires::IExpires\"\r\n  },\r\n  {\r\n    \"name\": \"ekubo::components::expires::IExpires\",\r\n    \"type\": \"interface\",\r\n    \"items\": [\r\n      {\r\n        \"name\": \"expires\",\r\n        \"type\": \"function\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"at\",\r\n            \"type\": \"core::integer::u64\"\r\n          }\r\n        ],\r\n        \"outputs\": [],\r\n        \"state_mutability\": \"view\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"ekubo::interfaces::core::ICoreDispatcher\",\r\n    \"type\": \"struct\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"contract_address\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"constructor\",\r\n    \"type\": \"constructor\",\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"owner\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      },\r\n      {\r\n        \"name\": \"core\",\r\n        \"type\": \"ekubo::interfaces::core::ICoreDispatcher\"\r\n      },\r\n      {\r\n        \"name\": \"nft_class_hash\",\r\n        \"type\": \"core::starknet::class_hash::ClassHash\"\r\n      },\r\n      {\r\n        \"name\": \"token_uri_base\",\r\n        \"type\": \"core::felt252\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"kind\": \"struct\",\r\n    \"name\": \"ekubo::components::upgradeable::Upgradeable::ClassHashReplaced\",\r\n    \"type\": \"event\",\r\n    \"members\": [\r\n      {\r\n        \"kind\": \"data\",\r\n        \"name\": \"new_class_hash\",\r\n        \"type\": \"core::starknet::class_hash::ClassHash\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"kind\": \"enum\",\r\n    \"name\": \"ekubo::components::upgradeable::Upgradeable::Event\",\r\n    \"type\": \"event\",\r\n    \"variants\": [\r\n      {\r\n        \"kind\": \"nested\",\r\n        \"name\": \"ClassHashReplaced\",\r\n        \"type\": \"ekubo::components::upgradeable::Upgradeable::ClassHashReplaced\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"kind\": \"struct\",\r\n    \"name\": \"ekubo::components::owned::Owned::OwnershipTransferred\",\r\n    \"type\": \"event\",\r\n    \"members\": [\r\n      {\r\n        \"kind\": \"data\",\r\n        \"name\": \"old_owner\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      },\r\n      {\r\n        \"kind\": \"data\",\r\n        \"name\": \"new_owner\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"kind\": \"enum\",\r\n    \"name\": \"ekubo::components::owned::Owned::Event\",\r\n    \"type\": \"event\",\r\n    \"variants\": [\r\n      {\r\n        \"kind\": \"nested\",\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"ekubo::components::owned::Owned::OwnershipTransferred\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"kind\": \"struct\",\r\n    \"name\": \"ekubo::positions::Positions::PositionMintedWithReferrer\",\r\n    \"type\": \"event\",\r\n    \"members\": [\r\n      {\r\n        \"kind\": \"data\",\r\n        \"name\": \"id\",\r\n        \"type\": \"core::integer::u64\"\r\n      },\r\n      {\r\n        \"kind\": \"data\",\r\n        \"name\": \"referrer\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"kind\": \"enum\",\r\n    \"name\": \"ekubo::positions::Positions::Event\",\r\n    \"type\": \"event\",\r\n    \"variants\": [\r\n      {\r\n        \"kind\": \"flat\",\r\n        \"name\": \"UpgradeableEvent\",\r\n        \"type\": \"ekubo::components::upgradeable::Upgradeable::Event\"\r\n      },\r\n      {\r\n        \"kind\": \"nested\",\r\n        \"name\": \"OwnedEvent\",\r\n        \"type\": \"ekubo::components::owned::Owned::Event\"\r\n      },\r\n      {\r\n        \"kind\": \"nested\",\r\n        \"name\": \"PositionMintedWithReferrer\",\r\n        \"type\": \"ekubo::positions::Positions::PositionMintedWithReferrer\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n","[\r\n  {\r\n    \"members\": [\r\n      {\r\n        \"name\": \"low\",\r\n        \"offset\": 0,\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"high\",\r\n        \"offset\": 1,\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"name\": \"Uint256\",\r\n    \"size\": 2,\r\n    \"type\": \"struct\"\r\n  },\r\n  {\r\n    \"data\": [\r\n      {\r\n        \"name\": \"from_\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"to\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"value\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"keys\": [],\r\n    \"name\": \"Transfer\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"data\": [\r\n      {\r\n        \"name\": \"owner\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"spender\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"value\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"keys\": [],\r\n    \"name\": \"Approval\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"data\": [\r\n      {\r\n        \"name\": \"implementation\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"keys\": [],\r\n    \"name\": \"Upgraded\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"data\": [\r\n      {\r\n        \"name\": \"previousAdmin\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"newAdmin\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"keys\": [],\r\n    \"name\": \"AdminChanged\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"data\": [\r\n      {\r\n        \"name\": \"from_address\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"to_address\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"amount\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"keys\": [],\r\n    \"name\": \"Transfer\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"data\": [\r\n      {\r\n        \"name\": \"owner\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"spender\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"amount\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"keys\": [],\r\n    \"name\": \"Approval\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"data\": [\r\n      {\r\n        \"name\": \"sender\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"amount0\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"amount1\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"keys\": [],\r\n    \"name\": \"Mint\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"data\": [\r\n      {\r\n        \"name\": \"sender\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"amount0\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"amount1\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"to\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"keys\": [],\r\n    \"name\": \"Burn\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"data\": [\r\n      {\r\n        \"name\": \"sender\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"amount0In\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"amount1In\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"amount0Out\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"amount1Out\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"to\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"keys\": [],\r\n    \"name\": \"Swap\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"data\": [\r\n      {\r\n        \"name\": \"reserve0\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"reserve1\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"keys\": [],\r\n    \"name\": \"Sync\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"token0\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"token1\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"proxy_admin\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"name\": \"initializer\",\r\n    \"outputs\": [],\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"name\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"symbol\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"symbol\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"totalSupply\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"totalSupply\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"decimals\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"decimals\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"account\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"balance\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"owner\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"spender\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"name\": \"allowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"remaining\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"token0\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"address\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"token1\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"address\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"get_reserves\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"reserve0\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"reserve1\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"block_timestamp_last\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"price_0_cumulative_last\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"res\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"price_1_cumulative_last\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"res\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"klast\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"res\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"recipient\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"amount\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"transfer\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"success\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"sender\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"recipient\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"amount\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"transferFrom\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"success\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"spender\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"amount\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"approve\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"success\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"spender\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"added_value\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"increaseAllowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"success\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"spender\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"subtracted_value\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"decreaseAllowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"success\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"to\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"name\": \"mint\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"liquidity\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"to\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"name\": \"burn\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"amount0\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"amount1\",\r\n        \"type\": \"Uint256\"\r\n      }\r\n    ],\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"amount0Out\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"amount1Out\",\r\n        \"type\": \"Uint256\"\r\n      },\r\n      {\r\n        \"name\": \"to\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"data_len\",\r\n        \"type\": \"felt\"\r\n      },\r\n      {\r\n        \"name\": \"data\",\r\n        \"type\": \"felt*\"\r\n      }\r\n    ],\r\n    \"name\": \"swap\",\r\n    \"outputs\": [],\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"to\",\r\n        \"type\": \"felt\"\r\n      }\r\n    ],\r\n    \"name\": \"skim\",\r\n    \"outputs\": [],\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"sync\",\r\n    \"outputs\": [],\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n","[\r\n  {\r\n    \"type\": \"impl\",\r\n    \"name\": \"MulticallImpl\",\r\n    \"interface_name\": \"multicall::IMulticall\"\r\n  },\r\n  {\r\n    \"type\": \"struct\",\r\n    \"name\": \"core::starknet::account::Call\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"to\",\r\n        \"type\": \"core::starknet::contract_address::ContractAddress\"\r\n      },\r\n      {\r\n        \"name\": \"selector\",\r\n        \"type\": \"core::felt252\"\r\n      },\r\n      {\r\n        \"name\": \"calldata\",\r\n        \"type\": \"core::array::Array::<core::felt252>\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"type\": \"struct\",\r\n    \"name\": \"core::array::Span::<core::felt252>\",\r\n    \"members\": [\r\n      {\r\n        \"name\": \"snapshot\",\r\n        \"type\": \"@core::array::Array::<core::felt252>\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"type\": \"interface\",\r\n    \"name\": \"multicall::IMulticall\",\r\n    \"items\": [\r\n      {\r\n        \"type\": \"function\",\r\n        \"name\": \"aggregate\",\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"calls\",\r\n            \"type\": \"core::array::Array::<core::starknet::account::Call>\"\r\n          }\r\n        ],\r\n        \"outputs\": [\r\n          {\r\n            \"type\": \"(core::integer::u64, core::array::Array::<core::array::Span::<core::felt252>>)\"\r\n          }\r\n        ],\r\n        \"state_mutability\": \"view\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"type\": \"event\",\r\n    \"name\": \"multicall::Multicall::Event\",\r\n    \"kind\": \"enum\",\r\n    \"variants\": []\r\n  }\r\n]\r\n","import { Fraction, Percent } from '@uniswap/sdk-core'\nimport moment from 'moment'\n\nexport enum Safety {\n  SAFE,\n  CORRECT,\n  DANGEROUS,\n  UNKNOWN,\n}\n\nexport const TEAM_ALLOCATION_SAFETY_BOUNDS = {\n  [Safety.SAFE]: new Percent(1, 100), // 1%\n  [Safety.CORRECT]: new Percent(10, 100), // 10%\n}\n\nexport const LIQUIDITY_LOCK_SAFETY_BOUNDS = {\n  [Safety.SAFE]: moment.duration(100, 'years'),\n  [Safety.CORRECT]: moment.duration(3, 'months'),\n}\n\nexport const STARTING_MCAP_SAFETY_BOUNDS = {\n  [Safety.SAFE]: {\n    mcap: new Fraction(9000),\n    teamAllocatoion: new Fraction(3000),\n  },\n  [Safety.CORRECT]: {\n    mcap: new Fraction(4500),\n    teamAllocatoion: new Fraction(5000),\n  },\n}\n","import { constants, getChecksumAddress } from 'starknet'\n\nimport { MultichainToken, Token } from '../types/tokens'\nimport { ETH_ADDRESSES, JEDISWAP_ETH_USDC, JEDISWAP_STRK_USDC, STRK_ADDRESSES, USDC_ADDRESSES } from './contracts'\n\nexport enum QUOTE_TOKEN_SYMBOL {\n  ETH = 'ETH',\n  STRK = 'STRK',\n  USDC = 'USDC',\n}\n\n// ETH\nexport const Ether: MultichainToken = {\n  [constants.StarknetChainId.SN_GOERLI]: {\n    address: ETH_ADDRESSES[constants.StarknetChainId.SN_GOERLI],\n    symbol: QUOTE_TOKEN_SYMBOL.ETH,\n    name: 'Ether',\n    decimals: 18,\n    camelCased: true,\n    usdcPair: {\n      address: JEDISWAP_ETH_USDC[constants.StarknetChainId.SN_GOERLI],\n      reversed: true,\n    },\n  },\n  [constants.StarknetChainId.SN_MAIN]: {\n    address: ETH_ADDRESSES[constants.StarknetChainId.SN_MAIN],\n    symbol: QUOTE_TOKEN_SYMBOL.ETH,\n    name: 'Ether',\n    decimals: 18,\n    camelCased: true,\n    usdcPair: {\n      address: JEDISWAP_ETH_USDC[constants.StarknetChainId.SN_MAIN],\n      reversed: false,\n    },\n  },\n}\n\n// STRK\nexport const Stark: MultichainToken = {\n  [constants.StarknetChainId.SN_GOERLI]: {\n    address: STRK_ADDRESSES[constants.StarknetChainId.SN_GOERLI],\n    symbol: QUOTE_TOKEN_SYMBOL.STRK,\n    name: 'Stark',\n    decimals: 18,\n    camelCased: true,\n    usdcPair: {\n      address: JEDISWAP_STRK_USDC[constants.StarknetChainId.SN_GOERLI],\n      reversed: true,\n    },\n  },\n  [constants.StarknetChainId.SN_MAIN]: {\n    address: STRK_ADDRESSES[constants.StarknetChainId.SN_MAIN],\n    symbol: QUOTE_TOKEN_SYMBOL.STRK,\n    name: 'Stark',\n    decimals: 18,\n    camelCased: true,\n    usdcPair: {\n      address: JEDISWAP_STRK_USDC[constants.StarknetChainId.SN_MAIN],\n      reversed: false,\n    },\n  },\n}\n\n// USDC\nexport const USDCoin: MultichainToken = {\n  [constants.StarknetChainId.SN_GOERLI]: {\n    address: USDC_ADDRESSES[constants.StarknetChainId.SN_GOERLI],\n    symbol: QUOTE_TOKEN_SYMBOL.USDC,\n    name: 'USD Coin',\n    decimals: 6,\n    camelCased: true,\n  },\n  [constants.StarknetChainId.SN_MAIN]: {\n    address: USDC_ADDRESSES[constants.StarknetChainId.SN_MAIN],\n    symbol: QUOTE_TOKEN_SYMBOL.USDC,\n    name: 'USD Coin',\n    decimals: 6,\n    camelCased: true,\n  },\n}\n\n// Quote tokens\n\nexport const QUOTE_TOKENS: { [chainId in constants.StarknetChainId]: Record<string, Token> } = {\n  [constants.StarknetChainId.SN_GOERLI]: {\n    [getChecksumAddress(ETH_ADDRESSES[constants.StarknetChainId.SN_GOERLI])]:\n      Ether[constants.StarknetChainId.SN_GOERLI],\n\n    [getChecksumAddress(STRK_ADDRESSES[constants.StarknetChainId.SN_GOERLI])]:\n      Stark[constants.StarknetChainId.SN_GOERLI],\n\n    [getChecksumAddress(USDC_ADDRESSES[constants.StarknetChainId.SN_GOERLI])]:\n      USDCoin[constants.StarknetChainId.SN_GOERLI],\n  },\n\n  [constants.StarknetChainId.SN_MAIN]: {\n    [getChecksumAddress(ETH_ADDRESSES[constants.StarknetChainId.SN_MAIN])]: Ether[constants.StarknetChainId.SN_MAIN],\n    [getChecksumAddress(STRK_ADDRESSES[constants.StarknetChainId.SN_MAIN])]: Stark[constants.StarknetChainId.SN_MAIN],\n    [getChecksumAddress(USDC_ADDRESSES[constants.StarknetChainId.SN_MAIN])]: USDCoin[constants.StarknetChainId.SN_MAIN],\n  },\n}\n\nexport const DEFAULT_QUOTE_TOKEN_ADDRESSES = {\n  [constants.StarknetChainId.SN_GOERLI]: getChecksumAddress(ETH_ADDRESSES[constants.StarknetChainId.SN_GOERLI]),\n  [constants.StarknetChainId.SN_MAIN]: getChecksumAddress(ETH_ADDRESSES[constants.StarknetChainId.SN_MAIN]),\n}\n","import { Fraction, Percent } from '@uniswap/sdk-core'\nimport { CallData, getChecksumAddress, hash, shortString, stark, uint256 } from 'starknet'\n\nimport {\n  AMMS,\n  DECIMALS,\n  EKUBO_BOUND,\n  EKUBO_FEES_MULTIPLICATOR,\n  EKUBO_POSITIONS_ADDRESSES,\n  EKUBO_TICK_SPACING,\n  Entrypoint,\n  FACTORY_ADDRESSES,\n  LIQUIDITY_LOCK_FOREVER_TIMESTAMP,\n  LiquidityType,\n  QUOTE_TOKENS,\n  TOKEN_CLASS_HASH,\n} from '../constants'\nimport {\n  BaseMemecoin,\n  DeployData,\n  EkuboLaunchData,\n  EkuboLiquidity,\n  JediswapLiquidity,\n  LaunchedMemecoin,\n  Memecoin,\n  StandardAMMLaunchData,\n} from '../types/memecoin'\nimport { multiCallContract } from '../utils/contract'\nimport { getStartingTick } from '../utils/ekubo'\nimport { decimalsScale } from '../utils/helpers'\nimport { getPairPrice } from '../utils/price'\nimport { FactoryConfig, FactoryInterface } from './interface'\n\nexport class Factory implements FactoryInterface {\n  public config: FactoryConfig\n\n  constructor(config: FactoryConfig) {\n    this.config = config\n  }\n\n  public async getMemecoin(address: string): Promise<Memecoin | undefined> {\n    const [baseMemecoin, launchData] = await Promise.all([\n      this.getBaseMemecoin(address),\n      this.getMemecoinLaunchData(address),\n    ])\n\n    if (!baseMemecoin) return undefined\n\n    return { ...baseMemecoin, ...launchData }\n  }\n\n  //\n  // GET MEMECOIN\n  //\n\n  public async getBaseMemecoin(address: string): Promise<BaseMemecoin | undefined> {\n    const result = await multiCallContract(this.config.provider, this.config.chainId, [\n      {\n        contractAddress: FACTORY_ADDRESSES[this.config.chainId],\n        entrypoint: Entrypoint.IS_MEMECOIN,\n        calldata: [address],\n      },\n      {\n        contractAddress: address,\n        entrypoint: Entrypoint.NAME,\n      },\n      {\n        contractAddress: address,\n        entrypoint: Entrypoint.SYMBOL,\n      },\n      {\n        contractAddress: address,\n        entrypoint: Entrypoint.OWNER,\n      },\n      {\n        contractAddress: address,\n        entrypoint: Entrypoint.TOTAL_SUPPLY,\n      },\n    ])\n\n    const [[isMemecoin], [name], [symbol], [owner], totalSupply] = result\n\n    if (!+isMemecoin) return undefined\n\n    return {\n      address,\n      name: shortString.decodeShortString(name),\n      symbol: shortString.decodeShortString(symbol),\n      owner: getChecksumAddress(owner),\n      decimals: DECIMALS,\n      totalSupply: uint256.uint256ToBN({ low: totalSupply[0], high: totalSupply[1] }).toString(),\n    }\n  }\n\n  //\n  // GET LAUNCH\n  //\n\n  public async getMemecoinLaunchData(address: string): Promise<LaunchedMemecoin> {\n    const result = await multiCallContract(this.config.provider, this.config.chainId, [\n      {\n        contractAddress: address,\n        entrypoint: Entrypoint.GET_TEAM_ALLOCATION,\n      },\n      {\n        contractAddress: address,\n        entrypoint: Entrypoint.LAUNCHED_AT_BLOCK_NUMBER,\n      },\n      {\n        contractAddress: address,\n        entrypoint: Entrypoint.IS_LAUNCHED,\n      },\n      {\n        contractAddress: FACTORY_ADDRESSES[this.config.chainId],\n        entrypoint: Entrypoint.LOCKED_LIQUIDITY,\n        calldata: [address],\n      },\n      {\n        contractAddress: address,\n        entrypoint: Entrypoint.LAUNCHED_WITH_LIQUIDITY_PARAMETERS,\n      },\n    ])\n\n    const [\n      teamAllocation,\n      [launchBlockNumber],\n      [launched],\n      [dontHaveLiq, lockManager, liqTypeIndex, ekuboId],\n      launchParams,\n    ] = result\n\n    const liquidityType = Object.values(LiquidityType)[+liqTypeIndex] as LiquidityType\n\n    const isLaunched = !!+launched && !+dontHaveLiq && !+launchParams[0] && liquidityType\n\n    if (!isLaunched) {\n      return {\n        isLaunched: false,\n      }\n    }\n\n    let liquidity\n    switch (liquidityType) {\n      case LiquidityType.STARKDEFI_ERC20:\n      case LiquidityType.JEDISWAP_ERC20: {\n        const baseLiquidity = {\n          type: liquidityType,\n          lockManager,\n          lockPosition: launchParams[5],\n          quoteToken: getChecksumAddress(launchParams[2]),\n          quoteAmount: uint256.uint256ToBN({ low: launchParams[3], high: launchParams[4] }).toString(),\n        } satisfies Partial<JediswapLiquidity>\n\n        liquidity = {\n          ...baseLiquidity,\n          ...(await this.getJediswapLiquidityLockPosition(baseLiquidity)),\n        }\n        break\n      }\n\n      case LiquidityType.EKUBO_NFT: {\n        const baseLiquidity = {\n          type: liquidityType,\n          lockManager,\n          ekuboId,\n          quoteToken: getChecksumAddress(launchParams[7]),\n          startingTick: +launchParams[4] * (+launchParams[5] ? -1 : 1), // mag * sign\n        } satisfies Partial<EkuboLiquidity>\n\n        liquidity = {\n          ...baseLiquidity,\n          ...(await this.getEkuboLiquidityLockPosition(baseLiquidity)),\n        }\n      }\n    }\n\n    return {\n      isLaunched: true,\n      quoteToken: QUOTE_TOKENS[this.config.chainId][liquidity.quoteToken],\n      launch: {\n        teamAllocation: uint256.uint256ToBN({ low: teamAllocation[0], high: teamAllocation[1] }).toString(),\n        blockNumber: Number(launchBlockNumber),\n      },\n      liquidity,\n    }\n  }\n\n  //\n  // GET LIQUIDITY\n  //\n\n  private async getJediswapLiquidityLockPosition(liquidity: Pick<JediswapLiquidity, 'lockManager' | 'lockPosition'>) {\n    const { result } = await this.config.provider.callContract({\n      contractAddress: liquidity.lockManager,\n      entrypoint: Entrypoint.GET_LOCK_DETAILS,\n      calldata: [liquidity.lockPosition],\n    })\n\n    // TODO: deconstruct result array in cleaner way\n\n    return {\n      unlockTime: +result[4],\n      owner: getChecksumAddress(result[3]),\n    } satisfies Partial<JediswapLiquidity>\n  }\n\n  private async getEkuboLiquidityLockPosition(liquidity: Pick<EkuboLiquidity, 'lockManager' | 'ekuboId'>) {\n    const { result } = await this.config.provider.callContract({\n      contractAddress: liquidity.lockManager,\n      entrypoint: Entrypoint.LIQUIDITY_POSITION_DETAILS,\n      calldata: [liquidity.ekuboId],\n    })\n\n    // TODO: deconstruct result array in cleaner way\n\n    return {\n      unlockTime: LIQUIDITY_LOCK_FOREVER_TIMESTAMP,\n      owner: getChecksumAddress(result[0]),\n      poolKey: {\n        token0: getChecksumAddress(result[2]),\n        token1: getChecksumAddress(result[3]),\n        fee: result[4],\n        tickSpacing: result[5],\n        extension: result[6],\n      },\n      bounds: {\n        lower: {\n          mag: result[7],\n          sign: result[8],\n        },\n        upper: {\n          mag: result[9],\n          sign: result[10],\n        },\n      },\n    } satisfies Partial<EkuboLiquidity>\n  }\n\n  //\n  // GET FEES\n  //\n\n  public async getEkuboFees(memecoin: Memecoin): Promise<Fraction | undefined> {\n    if (!memecoin.isLaunched || memecoin.liquidity.type !== LiquidityType.EKUBO_NFT || !memecoin.quoteToken) return\n\n    const calldata = CallData.compile([\n      memecoin.liquidity.ekuboId,\n      memecoin.liquidity.poolKey,\n      memecoin.liquidity.bounds,\n    ])\n\n    // call ekubo position to get collectable fees details\n    const { result } = await this.config.provider.callContract({\n      contractAddress: EKUBO_POSITIONS_ADDRESSES[this.config.chainId],\n      entrypoint: Entrypoint.GET_TOKEN_INFOS,\n      calldata,\n    })\n\n    const [, , , , , , , fees0, fees1] = result\n\n    // parse fees amount\n    return new Fraction(\n      (new Fraction(memecoin.address).lessThan(memecoin.quoteToken.address) ? fees1 : fees0).toString(),\n      decimalsScale(memecoin.quoteToken.decimals),\n    )\n  }\n\n  //\n  // GET COLLECT EKUBO FEES CALLDATA\n  //\n\n  public getCollectEkuboFeesCalldata(memecoin: Memecoin) {\n    if (!memecoin.isLaunched || memecoin.liquidity.type !== LiquidityType.EKUBO_NFT) return\n\n    const collectFeesCalldata = CallData.compile([\n      memecoin.liquidity.ekuboId, // ekubo pool id\n      memecoin.liquidity.owner,\n    ])\n\n    const calls = [\n      {\n        contractAddress: memecoin.liquidity.lockManager,\n        entrypoint: Entrypoint.WITHDRAW_FEES,\n        calldata: collectFeesCalldata,\n      },\n    ]\n\n    return { calls }\n  }\n\n  //\n  // GET EXTEND LIQUIDITY LOCK CALLDATA\n  //\n\n  public getExtendLiquidityLockCalldata(memecoin: Memecoin, seconds: number) {\n    if (!memecoin?.isLaunched || memecoin.liquidity.type === LiquidityType.EKUBO_NFT) return\n\n    const extendCalldata = CallData.compile([\n      memecoin.liquidity.lockPosition, // liquidity position\n      seconds,\n    ])\n\n    const calls = [\n      {\n        contractAddress: memecoin.liquidity.lockManager,\n        entrypoint: Entrypoint.EXTEND_LOCK,\n        calldata: extendCalldata,\n      },\n    ]\n\n    return { calls }\n  }\n\n  //\n  // GET DEPLOY CALLDATA\n  //\n\n  public getDeployCalldata(data: DeployData) {\n    const salt = stark.randomAddress()\n\n    const constructorCalldata = CallData.compile([\n      data.owner,\n      data.name,\n      data.symbol,\n      uint256.bnToUint256(BigInt(data.initialSupply) * BigInt(decimalsScale(DECIMALS))),\n      salt,\n    ])\n\n    const tokenAddress = hash.calculateContractAddressFromHash(\n      salt,\n      TOKEN_CLASS_HASH[this.config.chainId],\n      constructorCalldata.slice(0, -1),\n      FACTORY_ADDRESSES[this.config.chainId],\n    )\n\n    const calls = [\n      {\n        contractAddress: FACTORY_ADDRESSES[this.config.chainId],\n        entrypoint: Entrypoint.CREATE_MEMECOIN,\n        calldata: constructorCalldata,\n      },\n    ]\n\n    return { tokenAddress, calls }\n  }\n\n  //\n  // GET LAUNCH CALLDATA\n  //\n\n  public async getEkuboLaunchCalldata(memecoin: Memecoin, data: EkuboLaunchData) {\n    // get quote token current price\n    const quoteTokenPrice = await getPairPrice(this.config.provider, data.quoteToken.usdcPair)\n\n    // get the team allocation amount\n    const teamAllocationFraction = data.teamAllocations.reduce((acc, { amount }) => acc.add(amount), new Fraction(0))\n    const teamAllocationPercentage = new Percent(\n      teamAllocationFraction.quotient,\n      new Fraction(memecoin.totalSupply, decimalsScale(DECIMALS)).quotient,\n    )\n\n    // get the team allocation value in quote token at launch\n    const teamAllocationQuoteAmount = new Fraction(data.startingMarketCap)\n      .divide(quoteTokenPrice)\n      .multiply(teamAllocationPercentage.multiply(data.fees.add(1)))\n    const uin256TeamAllocationQuoteAmount = uint256.bnToUint256(\n      BigInt(teamAllocationQuoteAmount.multiply(decimalsScale(data.quoteToken.decimals)).quotient.toString()),\n    )\n\n    // get initial price based on mcap and quote token price\n    const initialPrice = +new Fraction(data.startingMarketCap)\n      .divide(quoteTokenPrice)\n      .multiply(decimalsScale(DECIMALS))\n      .divide(new Fraction(memecoin.totalSupply))\n      .toFixed(DECIMALS)\n\n    // convert initial price to an Ekubo tick\n    const startingTickMag = getStartingTick(initialPrice)\n    const i129StartingTick = {\n      mag: Math.abs(startingTickMag),\n      sign: startingTickMag < 0,\n    }\n\n    // get ekubo fees\n    const fees = data.fees.multiply(EKUBO_FEES_MULTIPLICATOR).quotient.toString()\n\n    // get quote token transfer calldata to buy the team allocation\n    const transferCalldata = CallData.compile([\n      FACTORY_ADDRESSES[this.config.chainId], // recipient\n      uin256TeamAllocationQuoteAmount, // amount\n    ])\n\n    // get initial holders informations\n    const initialHolders = data.teamAllocations.map(({ address }) => address)\n    const initialHoldersAmounts = data.teamAllocations.map(({ amount }) =>\n      uint256.bnToUint256(BigInt(amount) * BigInt(decimalsScale(DECIMALS))),\n    )\n\n    // get launch calldata\n    const launchCalldata = CallData.compile([\n      memecoin.address, // memecoin address\n      data.antiBotPeriod, // anti bot period in seconds\n      +data.holdLimit.toFixed(1) * 100, // hold limit\n      data.quoteToken.address, // quote token address\n      initialHolders, // initial holders\n      initialHoldersAmounts, // initial holders amounts\n      fees, // ekubo fees\n      EKUBO_TICK_SPACING, // tick spacing\n      i129StartingTick, // starting tick\n      EKUBO_BOUND, // bound\n    ])\n\n    const calls = [\n      {\n        contractAddress: data.quoteToken.address,\n        entrypoint: Entrypoint.TRANSFER,\n        calldata: transferCalldata,\n      },\n      {\n        contractAddress: FACTORY_ADDRESSES[this.config.chainId],\n        entrypoint: Entrypoint.LAUNCH_ON_EKUBO,\n        calldata: launchCalldata,\n      },\n    ]\n\n    return {\n      calls,\n    }\n  }\n\n  public async getStandardAMMLaunchCalldata(memecoin: Memecoin, data: StandardAMMLaunchData) {\n    // get quote token current price\n    const quoteTokenPrice = await getPairPrice(this.config.provider, data.quoteToken.usdcPair)\n\n    // get the team allocation percentage\n    const teamAllocationFraction = data.teamAllocations.reduce((acc, { amount }) => acc.add(amount), new Fraction(0))\n    const teamAllocationPercentage = new Percent(\n      teamAllocationFraction.quotient,\n      new Fraction(memecoin.totalSupply, decimalsScale(DECIMALS)).quotient,\n    )\n\n    // get the amount of quote token needed in the pool\n    const quoteAmount = new Fraction(data.startingMarketCap)\n      .divide(quoteTokenPrice)\n      .multiply(new Fraction(1).subtract(teamAllocationPercentage))\n    const uin256QuoteAmount = uint256.bnToUint256(BigInt(quoteAmount.multiply(decimalsScale(18)).quotient.toString()))\n\n    // get initial holders informations\n    const initialHolders = data.teamAllocations.map(({ address }) => address)\n    const initialHoldersAmounts = data.teamAllocations.map(({ amount }) =>\n      uint256.bnToUint256(BigInt(amount) * BigInt(decimalsScale(DECIMALS))),\n    )\n\n    // quote token approve calldata\n    const approveCalldata = CallData.compile([\n      FACTORY_ADDRESSES[this.config.chainId], // spender\n      uin256QuoteAmount,\n    ])\n\n    // launch calldata\n    const launchCalldata = CallData.compile([\n      memecoin.address, // memecoin address\n      data.antiBotPeriod, // anti bot period in seconds\n      +data.holdLimit.toFixed(1) * 100, // hold limit\n      data.quoteToken.address, // quote token\n      initialHolders, // initial holders\n      initialHoldersAmounts, // initial holders amounts\n      uin256QuoteAmount, // quote amount\n      data.liquidityLockPeriod,\n    ])\n\n    const calls = [\n      {\n        contractAddress: data.quoteToken.address,\n        entrypoint: Entrypoint.APPROVE,\n        calldata: approveCalldata,\n      },\n      {\n        contractAddress: FACTORY_ADDRESSES[this.config.chainId],\n        entrypoint: AMMS[data.amm].launchEntrypoint,\n        calldata: launchCalldata,\n      },\n    ]\n\n    return {\n      calls,\n    }\n  }\n}\n","import { Call, CallData, constants, hash, ProviderInterface } from 'starknet'\n\nimport { Entrypoint, MULTICALL_ADDRESSES } from '../constants'\n\nexport async function multiCallContract(\n  provider: ProviderInterface,\n  chainId: constants.StarknetChainId,\n  calls: Call[],\n) {\n  const calldata = calls.map((call) => {\n    return CallData.compile({\n      to: call.contractAddress,\n      selector: hash.getSelector(call.entrypoint),\n      calldata: call.calldata ?? [],\n    })\n  })\n\n  const rawResult = await provider.callContract({\n    contractAddress: MULTICALL_ADDRESSES[chainId],\n    entrypoint: Entrypoint.AGGREGATE,\n    calldata: [calldata.length, ...calldata.flat()],\n  })\n  const raw = rawResult.result.slice(2)\n\n  const result: string[][] = []\n  let idx = 0\n\n  for (let i = 0; i < raw.length; i += idx + 1) {\n    idx = parseInt(raw[i], 16)\n\n    result.push(raw.slice(i + 1, i + 1 + idx))\n  }\n\n  return result\n}\n","export const decimalsScale = (decimals: number) => `1${Array(decimals).fill('0').join('')}`\n","import { Fraction } from '@uniswap/sdk-core'\nimport { BlockNumber, BlockTag, ProviderInterface, uint256 } from 'starknet'\n\nimport { Entrypoint } from '../constants'\nimport { USDCPair } from '../types/tokens'\nimport { decimalsScale } from './helpers'\n\nexport async function getPairPrice(\n  provider: ProviderInterface,\n  pair?: USDCPair,\n  blockNumber: BlockNumber = BlockTag.latest,\n) {\n  if (!pair) return new Fraction(1, 1)\n\n  const { result } = await provider.callContract(\n    {\n      contractAddress: pair.address,\n      entrypoint: Entrypoint.GET_RESERVES,\n    },\n    blockNumber,\n  )\n\n  const [reserve0Low, reserve0High, reserve1Low, reserve1High] = result\n\n  const pairPrice = new Fraction(\n    uint256.uint256ToBN({ low: reserve1Low, high: reserve1High }).toString(),\n    uint256.uint256ToBN({ low: reserve0Low, high: reserve0High }).toString(),\n  )\n\n  // token0 and token1 are switched on some pairs\n  return (pair.reversed ? pairPrice.invert() : pairPrice).multiply(decimalsScale(12))\n}\n","import { Fraction } from '@uniswap/sdk-core'\nimport { CallDetails, constants, ProviderInterface } from 'starknet'\n\nimport {\n  BaseMemecoin,\n  DeployData,\n  EkuboLaunchData,\n  LaunchedMemecoin,\n  Memecoin,\n  StandardAMMLaunchData,\n} from '../types/memecoin'\n\nexport type FactoryConfig = {\n  provider: ProviderInterface\n  chainId: constants.StarknetChainId\n}\n\n// TODO: Add comments\nexport abstract class FactoryInterface {\n  public abstract config: FactoryConfig\n\n  public abstract getMemecoin(address: string): Promise<Memecoin | undefined>\n\n  public abstract getBaseMemecoin(address: string): Promise<BaseMemecoin | undefined>\n\n  public abstract getMemecoinLaunchData(address: string): Promise<LaunchedMemecoin>\n\n  public abstract getEkuboFees(memecoin: Memecoin): Promise<Fraction | undefined>\n\n  public abstract getCollectEkuboFeesCalldata(memecoin: Memecoin): { calls: CallDetails[] } | undefined\n\n  public abstract getExtendLiquidityLockCalldata(\n    memecoin: Memecoin,\n    seconds: number,\n  ): { calls: CallDetails[] } | undefined\n\n  public abstract getDeployCalldata(data: DeployData): { tokenAddress: string; calls: CallDetails[] }\n\n  public abstract getEkuboLaunchCalldata(memecoin: Memecoin, data: EkuboLaunchData): Promise<{ calls: CallDetails[] }>\n\n  public abstract getStandardAMMLaunchCalldata(\n    memecoin: Memecoin,\n    data: StandardAMMLaunchData,\n  ): Promise<{ calls: CallDetails[] }>\n}\n","import { Fraction } from '@uniswap/sdk-core'\n\nimport { DECIMALS, LiquidityType } from '../constants'\nimport { Memecoin } from '../types'\nimport { getInitialPrice } from './ekubo'\nimport { decimalsScale } from './helpers'\n\n// eslint-disable-next-line import/no-unused-modules\nexport function getStartingMarketCap(memecoin: Memecoin, quoteTokenPriceAtLaunch?: Fraction): Fraction | undefined {\n  if (!memecoin.isLaunched || !quoteTokenPriceAtLaunch || !memecoin.quoteToken) return undefined\n\n  switch (memecoin.liquidity.type) {\n    case LiquidityType.STARKDEFI_ERC20:\n    case LiquidityType.JEDISWAP_ERC20: {\n      // starting mcap = quote amount in liq * (team allocation % + 100) * quote token price at launch\n      return new Fraction(memecoin.liquidity.quoteAmount)\n        .multiply(new Fraction(memecoin.launch.teamAllocation, memecoin.totalSupply).add(1))\n        .divide(decimalsScale(memecoin.quoteToken.decimals))\n        .multiply(quoteTokenPriceAtLaunch)\n    }\n\n    case LiquidityType.EKUBO_NFT: {\n      // get starting price from starting tick\n      const initialPrice = getInitialPrice(memecoin.liquidity.startingTick)\n\n      // starting mcap = initial price * quote token price at launch * total supply\n      return new Fraction(\n        initialPrice.toFixed(DECIMALS).replace(/\\./, '').replace(/^0+/, ''), // from 0.000[...]0001 to \"1\"\n        decimalsScale(DECIMALS),\n      )\n        .multiply(quoteTokenPriceAtLaunch)\n        .multiply(memecoin.totalSupply)\n        .divide(decimalsScale(DECIMALS))\n    }\n  }\n}\n","import { Fraction, Percent } from '@uniswap/sdk-core'\nimport moment from 'moment'\n\nimport {\n  LIQUIDITY_LOCK_SAFETY_BOUNDS,\n  Safety,\n  STARTING_MCAP_SAFETY_BOUNDS,\n  TEAM_ALLOCATION_SAFETY_BOUNDS,\n} from '../constants'\n\nexport function getTeamAllocationSafety(teamAllocation: Percent) {\n  if (teamAllocation.greaterThan(TEAM_ALLOCATION_SAFETY_BOUNDS[Safety.CORRECT])) return Safety.DANGEROUS\n  if (teamAllocation.greaterThan(TEAM_ALLOCATION_SAFETY_BOUNDS[Safety.SAFE])) return Safety.CORRECT\n  return Safety.SAFE\n}\n\nexport function getLiquidityLockSafety(liquidityLock: moment.Duration) {\n  if (liquidityLock.asMonths() >= LIQUIDITY_LOCK_SAFETY_BOUNDS[Safety.SAFE].asMonths()) return Safety.SAFE\n  if (liquidityLock.asMonths() >= LIQUIDITY_LOCK_SAFETY_BOUNDS[Safety.CORRECT].asMonths()) return Safety.CORRECT\n  return Safety.DANGEROUS\n}\n\nexport function getQuoteTokenSafety(isUnknown: boolean) {\n  return isUnknown ? Safety.DANGEROUS : Safety.SAFE\n}\n\nexport function getStartingMcapSafety(teamAllocation: Percent, startingMcap?: Fraction) {\n  if (!startingMcap) return Safety.DANGEROUS\n\n  if (\n    startingMcap?.lessThan(STARTING_MCAP_SAFETY_BOUNDS[Safety.CORRECT].mcap) ||\n    startingMcap.multiply(teamAllocation).greaterThan(STARTING_MCAP_SAFETY_BOUNDS[Safety.CORRECT].teamAllocatoion)\n  ) {\n    return Safety.DANGEROUS\n  }\n\n  if (\n    startingMcap?.lessThan(STARTING_MCAP_SAFETY_BOUNDS[Safety.SAFE].mcap) ||\n    startingMcap.multiply(teamAllocation).greaterThan(STARTING_MCAP_SAFETY_BOUNDS[Safety.SAFE].teamAllocatoion)\n  ) {\n    return Safety.CORRECT\n  }\n\n  return Safety.SAFE\n}\n"],"mappings":"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","names":["Entrypoint","LiquidityType","AMM","Percent","Safety","constants","QUOTE_TOKEN_SYMBOL","constants","Fraction","Percent","CallData","getChecksumAddress","hash","uint256","Fraction","Fraction","getChecksumAddress","uint256","CallData","Fraction","hash","Percent","Fraction","Fraction"]}