"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.containsNodeError = containsNodeError;
exports.getNodeError = getNodeError;
const viem_1 = require("viem");
function containsNodeError(err) {
    return (err instanceof viem_1.TransactionRejectedRpcError ||
        err instanceof viem_1.InvalidInputRpcError ||
        (err instanceof viem_1.RpcRequestError && err.code === viem_1.ExecutionRevertedError.code));
}
function getNodeError(err, args) {
    const message = (err.details || '').toLowerCase();
    const executionRevertedError = err instanceof viem_1.BaseError
        ? err.walk((e) => e.code === viem_1.ExecutionRevertedError.code)
        : err;
    if (executionRevertedError instanceof viem_1.BaseError) {
        return new viem_1.ExecutionRevertedError({
            cause: err,
            message: executionRevertedError.details,
        });
    }
    if (viem_1.ExecutionRevertedError.nodeMessage.test(message))
        return new viem_1.ExecutionRevertedError({
            cause: err,
            message: err.details,
        });
    if (viem_1.FeeCapTooHighError.nodeMessage.test(message))
        return new viem_1.FeeCapTooHighError({
            cause: err,
            maxFeePerGas: args?.maxFeePerGas,
        });
    if (viem_1.FeeCapTooLowError.nodeMessage.test(message))
        return new viem_1.FeeCapTooLowError({
            cause: err,
            maxFeePerGas: args?.maxFeePerGas,
        });
    if (viem_1.NonceTooHighError.nodeMessage.test(message))
        return new viem_1.NonceTooHighError({ cause: err, nonce: args?.nonce });
    if (viem_1.NonceTooLowError.nodeMessage.test(message))
        return new viem_1.NonceTooLowError({ cause: err, nonce: args?.nonce });
    if (viem_1.NonceMaxValueError.nodeMessage.test(message))
        return new viem_1.NonceMaxValueError({ cause: err, nonce: args?.nonce });
    if (viem_1.InsufficientFundsError.nodeMessage.test(message))
        return new viem_1.InsufficientFundsError({ cause: err });
    if (viem_1.IntrinsicGasTooHighError.nodeMessage.test(message))
        return new viem_1.IntrinsicGasTooHighError({ cause: err, gas: args?.gas });
    if (viem_1.IntrinsicGasTooLowError.nodeMessage.test(message))
        return new viem_1.IntrinsicGasTooLowError({ cause: err, gas: args?.gas });
    if (viem_1.TransactionTypeNotSupportedError.nodeMessage.test(message))
        return new viem_1.TransactionTypeNotSupportedError({ cause: err });
    if (viem_1.TipAboveFeeCapError.nodeMessage.test(message))
        return new viem_1.TipAboveFeeCapError({
            cause: err,
            maxFeePerGas: args?.maxFeePerGas,
            maxPriorityFeePerGas: args?.maxPriorityFeePerGas,
        });
    return new viem_1.UnknownNodeError({
        cause: err,
    });
}
//# sourceMappingURL=getNodeError.js.map