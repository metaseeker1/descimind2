"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.receiptOutcomeStatuses = void 0;
exports.formatTransactionReceipt = formatTransactionReceipt;
exports.formatTransactionReceipts = formatTransactionReceipts;
const log_js_1 = require("./log.js");
const transaction_js_1 = require("./transaction.js");
exports.receiptOutcomeStatuses = {
    '0x0': 'success',
    '0x1': 'failed',
    '0x2': 'skipped',
};
function formatTransactionReceipt(transactionReceipt) {
    const receipt = {
        ...transactionReceipt,
        index: transactionReceipt.index ? BigInt(transactionReceipt.index) : null,
        epochNumber: transactionReceipt.epochNumber
            ? BigInt(transactionReceipt.epochNumber)
            : null,
        gasUsed: transactionReceipt.gasUsed
            ? BigInt(transactionReceipt.gasUsed)
            : null,
        gasFee: transactionReceipt.gasFee
            ? BigInt(transactionReceipt.gasFee)
            : null,
        storageCollateralized: transactionReceipt.storageCollateralized
            ? BigInt(transactionReceipt.storageCollateralized)
            : null,
        storageReleased: transactionReceipt.storageCollateralized
            ? transactionReceipt.storageReleased?.map((item) => ({
                ...item,
                collaterals: item.collaterals ? BigInt(item.collaterals) : null,
            }))
            : null,
        outcomeStatus: transactionReceipt.outcomeStatus
            ? exports.receiptOutcomeStatuses[transactionReceipt.outcomeStatus]
            : null,
        log: transactionReceipt.log
            ? transactionReceipt.log.map((log) => (0, log_js_1.formatLog)(log))
            : null,
        burntGasFee: transactionReceipt.burntGasFee
            ? BigInt(transactionReceipt.burntGasFee)
            : null,
        effectiveGasPrice: transactionReceipt.effectiveGasPrice
            ? BigInt(transactionReceipt.effectiveGasPrice)
            : null,
        type: transactionReceipt.type
            ? transaction_js_1.transactionType[transactionReceipt.type] || transactionReceipt.type
            : null,
    };
    return receipt;
}
function formatTransactionReceipts(transactionReceipts) {
    return transactionReceipts.map((item) => item.map(formatTransactionReceipt));
}
//# sourceMappingURL=transactionReceipt.js.map