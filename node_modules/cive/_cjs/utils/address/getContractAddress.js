"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getContractAddress = getContractAddress;
const utils_1 = require("viem/utils");
const contract_js_1 = require("../../constants/contract.js");
const base32AddressToHex_js_1 = require("./base32AddressToHex.js");
const hexAddressToBase32_js_1 = require("./hexAddressToBase32.js");
function getContractAddress(opts) {
    const bytecodeHash = (() => {
        if ('bytecodeHash' in opts) {
            if ((0, utils_1.isHex)(opts.bytecodeHash))
                return opts.bytecodeHash;
            return (0, utils_1.toHex)(opts.bytecodeHash);
        }
        return (0, utils_1.keccak256)((0, utils_1.encodePacked)(['bytes'], [(0, utils_1.isHex)(opts.bytecode) ? opts.bytecode : (0, utils_1.toHex)(opts.bytecode)]), 'hex');
    })();
    const hexAddress = (() => {
        if (opts.opcode === 'CREATE2') {
            const create2Address = opts.create2FactoryAddress || contract_js_1.create2FactoryAddress;
            if ((0, utils_1.isHex)(create2Address))
                return create2Address;
            return (0, base32AddressToHex_js_1.base32AddressToHex)({ address: create2Address });
        }
        return (0, base32AddressToHex_js_1.base32AddressToHex)({ address: opts.from });
    })();
    const addressHash = (0, utils_1.keccak256)((0, utils_1.encodePacked)(['bytes1', 'address', 'bytes32', 'bytes32'], [
        opts.opcode === 'CREATE2' ? '0xff' : '0x00',
        hexAddress,
        opts.opcode === 'CREATE2'
            ? (0, utils_1.toHex)(opts.salt, { size: 32 })
            : (0, utils_1.toHex)((0, utils_1.toBytes)(opts.nonce).reverse(), { size: 32 }),
        bytecodeHash,
    ]));
    return (0, hexAddressToBase32_js_1.hexAddressToBase32)({
        hexAddress: `0x8${addressHash.slice(-39)}`,
        networkId: opts.networkId,
        verbose: opts.verbose,
    });
}
//# sourceMappingURL=getContractAddress.js.map