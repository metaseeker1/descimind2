"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBlock = getBlock;
const viem_1 = require("viem");
const block_js_1 = require("../../errors/block.js");
const block_js_2 = require("../../utils/formatters/block.js");
async function getBlock(client, { blockHash, blockNumber, epochNumber, epochTag, includeTransactions, } = {}) {
    const _blockNumber = blockNumber ? (0, viem_1.numberToHex)(blockNumber) : undefined;
    const _epochTag = epochTag ?? 'latest_state';
    const _includeTransactions = includeTransactions ?? false;
    const epochNumberHex = typeof epochNumber !== 'undefined' ? (0, viem_1.numberToHex)(epochNumber) : undefined;
    let block = null;
    if (blockHash) {
        block = await client.request({
            method: 'cfx_getBlockByHash',
            params: [blockHash, _includeTransactions],
        });
    }
    else if (_blockNumber) {
        block = await client.request({
            method: 'cfx_getBlockByBlockNumber',
            params: [_blockNumber, _includeTransactions],
        });
    }
    else {
        block = await client.request({
            method: 'cfx_getBlockByEpochNumber',
            params: [epochNumberHex || _epochTag, _includeTransactions],
        });
    }
    if (!block)
        throw new block_js_1.BlockNotFoundError({ blockHash, epochNumber });
    const format = client.chain?.formatters?.block?.format || block_js_2.formatBlock;
    return format(block);
}
//# sourceMappingURL=getBlock.js.map