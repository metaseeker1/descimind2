"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.estimateGasAndCollateral = estimateGasAndCollateral;
const utils_1 = require("viem/utils");
const parseAccount_js_1 = require("../../accounts/utils/parseAccount.js");
const fee_js_1 = require("../../utils/formatters/fee.js");
const transactionRequest_js_1 = require("../../utils/formatters/transactionRequest.js");
async function estimateGasAndCollateral(client, args) {
    const { account: account_ = client.account, batch = Boolean(client.batch?.multicall), epochNumber, epochTag = 'latest_state', data, gas, gasPrice, storageLimit, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, ...rest } = args;
    const account = account_ ? (0, parseAccount_js_1.parseAccount)(account_) : undefined;
    const _epochNumber = epochNumber ? (0, utils_1.numberToHex)(epochNumber) : undefined;
    const epoch = _epochNumber || epochTag;
    const chainFormat = client.chain?.formatters?.transactionRequest?.format;
    const format = chainFormat || transactionRequest_js_1.formatTransactionRequest;
    const request = format({
        ...rest,
        from: account?.address,
        data,
        gas,
        gasPrice,
        maxFeePerGas,
        maxPriorityFeePerGas,
        nonce,
        to,
        value,
        storageLimit,
    });
    const result = await client.request({
        method: 'cfx_estimateGasAndCollateral',
        params: [request, epoch],
    });
    return (0, fee_js_1.formatFee)(result);
}
//# sourceMappingURL=estimateGasAndCollateral.js.map