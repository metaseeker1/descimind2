import { BaseError } from 'viem';
export class InvalidNetworkIdError extends BaseError {
    name = 'InvalidNetworkIdError';
    constructor({ networkId, message, }) {
        super(`Invalid network id: ${networkId}. ${message || ''}`);
    }
}
export class ConvertBitExcessPaddingError extends BaseError {
    name = 'ConvertBitExcessPaddingError';
    constructor() {
        super('Excess padding');
    }
}
export class ConvertBitNonZeroPaddingError extends BaseError {
    name = 'ConvertBitNonZeroPaddingError';
    constructor() {
        super('Non-zero padding');
    }
}
export class MixedCaseAddressError extends BaseError {
    name = 'MixedCaseAddressError';
    constructor({ address }) {
        super(`Mixed case address ${address}`);
    }
}
export class InvalidAddressVersionError extends BaseError {
    name = 'InvalidAddressVersionError';
    constructor({ address }) {
        super(`Invalid address version ${address}`);
    }
}
export class AddressTypeNotMatchError extends BaseError {
    name = 'AddressTypeNotMatchError';
    constructor({ address }) {
        super(`Address type not match ${address}`);
    }
}
//# sourceMappingURL=address.js.map