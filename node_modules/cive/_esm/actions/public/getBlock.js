import { numberToHex } from 'viem';
import { BlockNotFoundError } from '../../errors/block.js';
import { formatBlock, } from '../../utils/formatters/block.js';
export async function getBlock(client, { blockHash, blockNumber, epochNumber, epochTag, includeTransactions, } = {}) {
    const _blockNumber = blockNumber ? numberToHex(blockNumber) : undefined;
    const _epochTag = epochTag ?? 'latest_state';
    const _includeTransactions = includeTransactions ?? false;
    const epochNumberHex = typeof epochNumber !== 'undefined' ? numberToHex(epochNumber) : undefined;
    let block = null;
    if (blockHash) {
        block = await client.request({
            method: 'cfx_getBlockByHash',
            params: [blockHash, _includeTransactions],
        });
    }
    else if (_blockNumber) {
        block = await client.request({
            method: 'cfx_getBlockByBlockNumber',
            params: [_blockNumber, _includeTransactions],
        });
    }
    else {
        block = await client.request({
            method: 'cfx_getBlockByEpochNumber',
            params: [epochNumberHex || _epochTag, _includeTransactions],
        });
    }
    if (!block)
        throw new BlockNotFoundError({ blockHash, epochNumber });
    const format = client.chain?.formatters?.block?.format || formatBlock;
    return format(block);
}
//# sourceMappingURL=getBlock.js.map