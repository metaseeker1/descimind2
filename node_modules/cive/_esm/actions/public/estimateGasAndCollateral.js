import { numberToHex } from 'viem/utils';
import { parseAccount } from '../../accounts/utils/parseAccount.js';
import { formatFee } from '../../utils/formatters/fee.js';
import { formatTransactionRequest, } from '../../utils/formatters/transactionRequest.js';
export async function estimateGasAndCollateral(client, args) {
    const { account: account_ = client.account, batch = Boolean(client.batch?.multicall), epochNumber, epochTag = 'latest_state', data, gas, gasPrice, storageLimit, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, ...rest } = args;
    const account = account_ ? parseAccount(account_) : undefined;
    const _epochNumber = epochNumber ? numberToHex(epochNumber) : undefined;
    const epoch = _epochNumber || epochTag;
    const chainFormat = client.chain?.formatters?.transactionRequest?.format;
    const format = chainFormat || formatTransactionRequest;
    const request = format({
        ...rest,
        from: account?.address,
        data,
        gas,
        gasPrice,
        maxFeePerGas,
        maxPriorityFeePerGas,
        nonce,
        to,
        value,
        storageLimit,
    });
    const result = await client.request({
        method: 'cfx_estimateGasAndCollateral',
        params: [request, epoch],
    });
    return formatFee(result);
}
//# sourceMappingURL=estimateGasAndCollateral.js.map