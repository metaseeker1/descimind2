import { getContractError, } from '../../errors/getContractError.js';
import { getAction } from '../../utils/getAction.js';
import { encodeFunctionData, parseAccount, } from '../../utils/index.js';
import { estimateGasAndCollateral, } from './estimateGasAndCollateral.js';
export async function estimateContractGasAndCollateral(client, parameters) {
    const { abi, address, args, functionName, ...request } = parameters;
    const data = encodeFunctionData({
        abi,
        args,
        functionName,
    });
    try {
        const gas = await getAction(client, estimateGasAndCollateral, 'estimateGasAndCollateral')({
            data,
            to: address,
            ...request,
        });
        return gas;
    }
    catch (error) {
        const account = request.account ? parseAccount(request.account) : undefined;
        throw getContractError(error, {
            abi,
            address,
            args,
            docsPath: '/docs/contract/estimateContractGas',
            functionName,
            sender: account?.address,
        });
    }
}
//# sourceMappingURL=estimateContractGasAndCollateral.js.map