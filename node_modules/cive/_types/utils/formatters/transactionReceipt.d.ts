import type { Chain, ExtractChainFormatterReturnType } from '../../types/chain.js';
import type { RpcTransactionReceipt } from '../../types/rpc.js';
import type { TransactionReceipt } from '../../types/transaction.js';
import type { ExactPartial } from '../../types/utils.js';
export type FormattedTransactionReceipt<TChain extends Chain | undefined = undefined> = ExtractChainFormatterReturnType<TChain, 'transactionReceipt', TransactionReceipt>;
export declare const receiptOutcomeStatuses: {
    readonly '0x0': "success";
    readonly '0x1': "failed";
    readonly '0x2': "skipped";
};
export declare function formatTransactionReceipt(transactionReceipt: ExactPartial<RpcTransactionReceipt>): TransactionReceipt;
export declare function formatTransactionReceipts(transactionReceipts: ExactPartial<RpcTransactionReceipt>[][]): TransactionReceipt[][];
//# sourceMappingURL=transactionReceipt.d.ts.map