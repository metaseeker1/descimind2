import type { Address, AddressType, HexAddress } from '../../accounts/types.js';
export type DecodeBase32AddressParameters<TNetworkId extends number | undefined = undefined, TAddressType extends AddressType | undefined = undefined, TVerbose extends boolean | undefined = undefined> = {
    address: Address<TNetworkId, TAddressType, TVerbose>;
    strict?: boolean;
};
export type DecodeBase32AddressReturnType = {
    address: HexAddress;
    type: AddressType | 'unknown';
    networkId: number;
};
export declare function decodeBase32Address<TNetworkId extends number | undefined = undefined, TAddressType extends AddressType | undefined = undefined, TVerbose extends boolean | undefined = undefined>({ address, strict, }: DecodeBase32AddressParameters<TNetworkId, TAddressType, TVerbose>): DecodeBase32AddressReturnType;
//# sourceMappingURL=decodeBase32Address.d.ts.map