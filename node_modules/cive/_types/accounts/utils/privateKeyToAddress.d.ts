import { type BytesToHexErrorType, type Hex } from 'viem';
import type { ErrorType } from '../../errors/utils.js';
import type { Address, AddressType } from '../types.js';
import { type PublicKeyToAddressErrorType } from './publicKeyToAddress.js';
export type PrivateKeyToAddressErrorType = BytesToHexErrorType | PublicKeyToAddressErrorType | ErrorType;
export type PrivateKeyToAddressParameters = {
    privateKey: Hex;
    networkId: number;
    addressType?: AddressType | undefined;
    verbose?: boolean | undefined;
};
export declare function privateKeyToAddress<TNetworkId extends number = number, TAddressType extends AddressType | undefined = undefined, TVerbose extends boolean | undefined = undefined>({ privateKey, networkId, verbose }: PrivateKeyToAddressParameters): Address<TNetworkId, TAddressType, TVerbose>;
//# sourceMappingURL=privateKeyToAddress.d.ts.map