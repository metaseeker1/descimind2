import { type NumberToHexErrorType } from 'viem';
import type { RequestErrorType } from 'viem/utils';
import { type Account, type ParseAccountErrorType } from '../../accounts/index.js';
import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import type { ErrorType } from '../../errors/utils.js';
import type { GetAccountParameter } from '../../types/account.js';
import type { Chain, GetChainParameter } from '../../types/chain.js';
import type { TransactionSerialized } from '../../types/transaction.js';
import type { UnionOmit } from '../../types/utils.js';
import { type AssertCurrentChainErrorType } from '../../utils/chain/assertCurrentChain.js';
import { type FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js';
import { type AssertRequestErrorType } from '../../utils/transaction/assertRequest.js';
import type { GetTransactionType } from '../../utils/transaction/getTransactionType.js';
import { type GetChainIdErrorType } from '../public/getChainId.js';
export type SignTransactionRequest<chain extends Chain | undefined = Chain | undefined> = UnionOmit<FormattedTransactionRequest<chain>, 'from'>;
export type SignTransactionParameters<chain extends Chain | undefined, account extends Account | undefined, request extends SignTransactionRequest<chain> = SignTransactionRequest<chain>> = request & GetAccountParameter<account> & GetChainParameter<chain>;
export type SignTransactionReturnType<request extends SignTransactionRequest = SignTransactionRequest> = TransactionSerialized<GetTransactionType<request>>;
export type SignTransactionErrorType = ParseAccountErrorType | AssertRequestErrorType | GetChainIdErrorType | AssertCurrentChainErrorType | NumberToHexErrorType | RequestErrorType | ErrorType;
export declare function signTransaction<chain extends Chain | undefined, account extends Account | undefined, const request extends SignTransactionRequest<chain> = SignTransactionRequest<chain>>(client: Client<Transport, chain, account>, parameters: SignTransactionParameters<chain, account, request>): Promise<SignTransactionReturnType<request>>;
//# sourceMappingURL=signTransaction.d.ts.map