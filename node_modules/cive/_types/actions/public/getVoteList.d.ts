import type { Address } from '../../accounts/types.js';
import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import type { EpochNumber, EpochTag } from '../../types/block.js';
import type { Chain } from '../../types/chain.js';
import type { Vote } from '../../types/vote.js';
export type GetVoteListParameters = {
    address: Address;
} & ({
    /**
     * @default 'latest_state'
     */
    epochTag?: Exclude<EpochTag, 'latest_finalized' | 'latest_mined'> | undefined;
    epochNumber?: never | undefined;
} | {
    epochTag?: never | undefined;
    epochNumber?: EpochNumber | undefined;
});
export type GetVoteListReturnType = Vote[];
export declare function getVoteList<TChain extends Chain | undefined>(client: Client<Transport, TChain>, { address, epochNumber, epochTag }: GetVoteListParameters): Promise<GetVoteListReturnType>;
//# sourceMappingURL=getVoteList.d.ts.map