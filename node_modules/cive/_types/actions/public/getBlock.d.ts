import { type Hash } from 'viem';
import type { Account } from '../../accounts/types.js';
import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import type { EpochNumber, EpochTag } from '../../types/block.js';
import type { Chain } from '../../types/chain.js';
import type { Prettify } from '../../types/utils.js';
import { type FormattedBlock } from '../../utils/formatters/block.js';
export type GetBlockParameters<TIncludeTransactions extends boolean = false, TEpochTag extends Exclude<EpochTag, 'latest_finalized'> | undefined = undefined> = {
    includeTransactions?: TIncludeTransactions | undefined;
} & ({
    blockHash?: Hash | undefined;
    blockNumber?: never | undefined;
    epochNumber?: never | undefined;
    epochTag?: never | undefined;
} | {
    blockHash?: never | undefined;
    blockNumber?: bigint;
    epochNumber?: never | undefined;
    epochTag?: never | undefined;
} | {
    blockHash?: never | undefined;
    blockNumber?: never | undefined;
    epochNumber?: EpochNumber | undefined;
    epochTag?: never | undefined;
} | {
    blockHash?: never | undefined;
    blockNumber?: never | undefined;
    epochNumber?: never | undefined;
    /**
     * the epoch tag string
     * @default "latest_state"
     */
    epochTag?: TEpochTag | Exclude<EpochTag, 'latest_finalized'> | undefined;
});
export type GetBlockReturnType<TChain extends Chain | undefined = undefined, TIncludeTransactions extends boolean = false, TEpochTag extends EpochTag | undefined = undefined> = Prettify<FormattedBlock<TChain, TIncludeTransactions, TEpochTag>>;
export declare function getBlock<TChain extends Chain | undefined, TAccount extends Account | undefined, TIncludeTransactions extends boolean = false, TEpochTag extends Exclude<EpochTag, 'latest_finalized'> | undefined = undefined>(client: Client<Transport, TChain, TAccount>, { blockHash, blockNumber, epochNumber, epochTag, includeTransactions, }?: GetBlockParameters<TIncludeTransactions, TEpochTag>): Promise<GetBlockReturnType<TChain, TIncludeTransactions, TEpochTag>>;
//# sourceMappingURL=getBlock.d.ts.map