import type { NumberToHexErrorType, RequestErrorType } from 'viem/utils';
import type { Address } from '../../accounts/types.js';
import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import type { ErrorType } from '../../errors/utils.js';
import type { EpochNumber, EpochTag } from '../../types/block.js';
import type { Chain } from '../../types/chain.js';
export type GetBalanceParameters = {
    address: Address;
} & ({
    /**
     * @default 'latest_state'
     */
    epochTag?: Exclude<EpochTag, 'latest_finalized' | 'latest_mined'> | undefined;
    epochNumber?: never | undefined;
} | {
    epochTag?: never | undefined;
    epochNumber?: EpochNumber | undefined;
});
export type GetBalanceReturnType = bigint;
export type GetBalanceErrorType = RequestErrorType | NumberToHexErrorType | ErrorType;
export declare function getBalance<TChain extends Chain | undefined>(client: Client<Transport, TChain>, { address, epochNumber, epochTag }: GetBalanceParameters): Promise<GetBalanceReturnType>;
//# sourceMappingURL=getBalance.d.ts.map