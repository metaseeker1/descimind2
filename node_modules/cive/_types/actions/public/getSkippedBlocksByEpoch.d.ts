import type { NumberToHexErrorType } from 'viem';
import type { RequestErrorType } from 'viem/utils';
import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import type { ErrorType } from '../../errors/utils.js';
import type { Block, EpochNumber, EpochTag } from '../../types/block.js';
import type { Chain } from '../../types/chain.js';
export type GetSkippedBlocksByEpochParameters = {
    /**
     * @default 'latest_state'
     */
    epochTag?: Exclude<EpochTag, 'latest_finalized' | 'latest_mined'> | undefined;
    epochNumber?: never | undefined;
} | {
    epochTag?: never | undefined;
    epochNumber?: EpochNumber | undefined;
};
export type GetSkippedBlocksByEpochReturnType = Block[];
export type GetSkippedBlocksByEpochErrorType = RequestErrorType | NumberToHexErrorType | ErrorType;
export declare function getSkippedBlocksByEpoch<TChain extends Chain | undefined>(client: Client<Transport, TChain>, { epochNumber, epochTag, }?: GetSkippedBlocksByEpochParameters): Promise<GetSkippedBlocksByEpochReturnType>;
//# sourceMappingURL=getSkippedBlocksByEpoch.d.ts.map