import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import type { EpochNumber, EpochTag } from '../../types/block.js';
import type { Chain } from '../../types/chain.js';
export type GetParamsFormVoteParameters = {
    /**
     * @default 'latest_state'
     */
    epochTag?: EpochTag | undefined;
    epochNumber?: never | undefined;
} | {
    epochTag?: never | undefined;
    epochNumber?: EpochNumber | undefined;
};
export type GetParamsFormVoteReturnType = {
    powBaseReward: BigInt;
    interestRate: BigInt;
    storagePointProp: BigInt;
    baseFeeShareProp: BigInt;
};
export declare function getParamsFromVote<TChain extends Chain | undefined>(client: Client<Transport, TChain>, { epochNumber, epochTag }?: GetParamsFormVoteParameters): Promise<GetParamsFormVoteReturnType>;
//# sourceMappingURL=getParamsFromVote.d.ts.map