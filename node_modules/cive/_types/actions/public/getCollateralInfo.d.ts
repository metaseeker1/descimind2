import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import type { EpochNumber, EpochTag } from '../../types/block.js';
import type { Chain } from '../../types/chain.js';
export type GetCollateralInfoParameters = {
    /**
     * @default 'latest_state'
     */
    epochTag?: Exclude<EpochTag, 'latest_finalized' | 'latest_mined'> | undefined;
    epochNumber?: never | undefined;
} | {
    epochTag?: never | undefined;
    epochNumber?: EpochNumber | undefined;
};
export type GetCollateralInfoReturnType = {
    totalStorageTokens: bigint;
    convertedStoragePoints: bigint;
    usedStoragePoints: bigint;
};
export declare function getCollateralInfo<TChain extends Chain | undefined>(client: Client<Transport, TChain>, { epochNumber, epochTag }?: GetCollateralInfoParameters): Promise<GetCollateralInfoReturnType>;
//# sourceMappingURL=getCollateralInfo.d.ts.map