import type { Hash } from 'viem';
import type { RequestErrorType } from 'viem/utils';
import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import { type TransactionReceiptNotFoundErrorType } from '../../errors/transaction.js';
import type { ErrorType } from '../../errors/utils.js';
import type { Chain } from '../../types/chain.js';
import { type FormattedTransactionReceipt } from '../../utils/formatters/transactionReceipt.js';
export type GetTransactionReceiptParameters = {
    hash: Hash;
};
export type GetTransactionReceiptReturnType<TChain extends Chain | undefined = undefined> = FormattedTransactionReceipt<TChain>;
export type GetTransactionReceiptErrorType = RequestErrorType | TransactionReceiptNotFoundErrorType | ErrorType;
export declare function getTransactionReceipt<TChain extends Chain | undefined>(client: Client<Transport, TChain>, { hash }: GetTransactionReceiptParameters): Promise<import("../../types/chain.js").ExtractChainFormatterReturnType<TChain, "transactionReceipt", import("~cive/types/transaction.js").TransactionReceipt>>;
//# sourceMappingURL=getTransactionReceipt.d.ts.map