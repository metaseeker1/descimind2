import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import type { EpochNumber, EpochTag } from '../../types/block.js';
import type { Chain } from '../../types/chain.js';
export type GetInterestRateParameters = {
    /**
     * @default 'latest_state'
     */
    epochTag?: Exclude<EpochTag, 'latest_finalized' | 'latest_mined'> | undefined;
    epochNumber?: never | undefined;
} | {
    epochTag?: never | undefined;
    epochNumber?: EpochNumber | undefined;
};
export type GetInterestRateReturnType = bigint;
export declare function getInterestRate<TChain extends Chain | undefined>(client: Client<Transport, TChain>, { epochNumber, epochTag }?: GetInterestRateParameters): Promise<GetInterestRateReturnType>;
//# sourceMappingURL=getInterestRate.d.ts.map