import { type BaseFeeScalarErrorType, type Eip1559FeesNotSupportedErrorType, type EstimateMaxPriorityFeePerGasErrorType } from 'viem';
import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import type { ErrorType } from '../../errors/utils.js';
import type { Block } from '../../types/block.js';
import type { Chain, GetChainParameter } from '../../types/chain.js';
import type { FeeValuesEIP1559, FeeValuesLegacy, FeeValuesType } from '../../types/fee.js';
import type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js';
import { type GetGaspriceErrorType } from './getGasPrice.js';
export type EstimateFeesPerGasParameters<chain extends Chain | undefined = Chain | undefined, chainOverride extends Chain | undefined = Chain | undefined, type extends FeeValuesType = FeeValuesType> = {
    /**
     * The type of fee values to return.
     *
     * - `legacy`: Returns the legacy gas price.
     * - `eip1559`: Returns the max fee per gas and max priority fee per gas.
     *
     * @default 'eip1559'
     */
    type?: type | FeeValuesType | undefined;
} & GetChainParameter<chain, chainOverride>;
export type EstimateFeesPerGasReturnType<type extends FeeValuesType = FeeValuesType> = (type extends 'legacy' ? FeeValuesLegacy : never) | (type extends 'eip1559' ? FeeValuesEIP1559 : never);
export type EstimateFeesPerGasErrorType = BaseFeeScalarErrorType | EstimateMaxPriorityFeePerGasErrorType | GetGaspriceErrorType | Eip1559FeesNotSupportedErrorType | ErrorType;
export declare function estimateFeesPerGas<chain extends Chain | undefined, chainOverride extends Chain | undefined, type extends FeeValuesType = 'eip1559'>(client: Client<Transport, chain>, args?: EstimateFeesPerGasParameters<chain, chainOverride, type> | undefined): Promise<EstimateFeesPerGasReturnType<type>>;
export declare function internal_estimateFeesPerGas<chain extends Chain | undefined, chainOverride extends Chain | undefined, type extends FeeValuesType = 'eip1559'>(client: Client<Transport, chain>, args: EstimateFeesPerGasParameters<chain, chainOverride, type> & {
    block?: Block | undefined;
    request?: PrepareTransactionRequestParameters | undefined;
}): Promise<EstimateFeesPerGasReturnType<type>>;
//# sourceMappingURL=estimateFeesPerGas.d.ts.map