import { type Hash } from 'viem';
import type { NumberToHexErrorType, RequestErrorType } from 'viem/utils';
import type { Client } from '../../clients/createClient.js';
import type { Transport } from '../../clients/transports/createTransport.js';
import type { ErrorType } from '../../errors/utils.js';
import type { EpochNumber, EpochTag } from '../../types/block.js';
import type { Chain } from '../../types/chain.js';
export type GetBlocksByEpochParameters = {} & ({
    epochNumber?: EpochNumber;
    epochTag?: never | undefined;
} | {
    epochNumber?: never | undefined;
    epochTag?: Exclude<EpochTag, 'latest_finalized'>;
});
export type GetBlocksByEpochReturnType = Hash[];
export type GetBlocksByEpochErrorType = RequestErrorType | NumberToHexErrorType | ErrorType;
export declare function getBlocksByEpoch<TChain extends Chain | undefined>(client: Client<Transport, TChain>, { epochNumber, epochTag }?: GetBlocksByEpochParameters): Promise<GetBlocksByEpochReturnType>;
//# sourceMappingURL=getBlocksByEpoch.d.ts.map