export declare const mainnet: {
    blockExplorers: {
        readonly default: {
            readonly name: "Conflux Scan";
            readonly url: "https://confluxscan.io";
        };
    };
    contracts: {
        readonly multicall3: {
            readonly address: "cfx:acevn2d3dr6vh4jca28c6cmvkktsg7r8n25vp9hnmw";
            readonly epochCreated: 106231941;
        };
    };
    id: 1029;
    name: "Conflux core space";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "CFX";
        readonly symbol: "CFX";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://main.confluxrpc.com", "https://main.confluxrpc.org"];
            readonly webSocket: readonly ["wss://main.confluxrpc.com/ws", "wss://main.confluxrpc.org/ws"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom?: Record<string, unknown> | undefined;
    fees: {
        readonly baseFeeMultiplier: 1;
    };
    formatters?: undefined;
    serializers?: import("~cive/index.js").ChainSerializers<undefined, import("~cive/types/transaction.js").TransactionSerializable> | undefined;
};
//# sourceMappingURL=mainnet.d.ts.map