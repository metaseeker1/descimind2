export interface DeriveKeyResponse {
    key: string;
    certificate_chain: string[];
    asUint8Array: (max_length?: number) => Uint8Array;
}
export type Hex = `0x${string}`;
export interface TdxQuoteResponse {
    quote: Hex;
    event_log: string;
}
export declare function send_rpc_request<T = any>(endpoint: string, path: string, payload: string): Promise<T>;
export declare class TappdClient {
    private endpoint;
    constructor(endpoint?: string);
    deriveKey(path: string, subject: string): Promise<DeriveKeyResponse>;
    tdxQuote(report_data: string | Buffer | Uint8Array): Promise<TdxQuoteResponse>;
}
//# sourceMappingURL=index.d.ts.map